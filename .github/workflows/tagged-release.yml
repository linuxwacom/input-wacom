---
name: "tagged-release"

on:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"

    steps:
      # ...
      - uses: actions/checkout@master
      
      - name: "Make Step"
        run: |
          ./autogen.sh
          make dist
          echo "done!"
          
      - name: Get tar file
        id: get-tar-name
        run: echo "::set-output name=fileName::$(find . -type f -iname "*.tar.bz2" -printf "%f\n")"
          
      - name: Fetch tar file
        id: get-tar-path
        uses: Rishabh510/Path-lister-action@master
        with:
          path: "./"
          type: ".tar.bz2"

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@latest"
        id: release-create
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          
      - name: Generate Checksums
        id: generate-checksums
        run : |
          md5sum *tar.bz2 | tee md5sum.txt
          sha1sum *tar.bz2 | tee sha1sum.txt
          sha256sum *tar.bz2 | tee sha256sum.txt
          echo "md5=$(cut -f1 -d' ' md5sum.txt)" >> $GITHUB_OUTPUT
          echo "sha1=$(cut -f1 -d' ' sha1sum.txt)" >> $GITHUB_OUTPUT
          echo "sha256=$(cut -f1 -d' ' sha256sum.txt)" >> $GITHUB_OUTPUT
        
      - name: Upload Release Asset
        id: upload-main-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release-create.outputs.upload_url }}  
          asset_path: ${{ steps.get-tar-path.outputs.paths }}
          asset_name: ${{ steps.get-tar-name.outputs.fileName }}
          asset_content_type: application/zip
        
      - name: Update Release
        id: update-release
        uses: tubone24/update_release@v1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            **git tag: ${{  github.ref_name }}**
            ${{ steps.upload-main-asset.outputs.browser_download_url }}
            md5: `${{ steps.generate-checksums.outputs.md5 }}`
            sha1: `${{ steps.generate-checksums.outputs.sha1 }}`
            sha256: `${{ steps.generate-checksums.outputs.sha256 }}`
          isAppendBody: true
